@model Cabspot.Models.taxistas

@{
    ViewBag.controller = "Taxistas";
    ViewBag.action = "Detalles";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool ubicacionDisponible = (bool)ViewBag.ubicacionDisponbile;

    //lanzando notificacion de exito
    if (TempData["success"] != null)
    {
        <script type="text/javascript">
            var permanotice, tooltip, _alert;
            $(function () {
                new PNotify({
                    title: "Exito",
                    type: "success",
                    text: "Exito! se ha agregado un taxista.",
                    nonblock: {
                        nonblock: true
                    }
                });
            });
        </script>
    }

    if (TempData["mensajeAgregarVehiculo"] != null)
    {
        <script type="text/javascript">
            var permanotice, tooltip, _alert;
            $(function () {
                new PNotify({
                    title: "Exito",
                    type: "success",
                    text: "Exito! se ha agregado un vehículo para este taxista.",
                    nonblock: {
                        nonblock: true
                    }
                });
            });
        </script>
    }

    if (TempData["error"] != null)
    {
        <script type="text/javascript">
            var permanotice, tooltip, _alert;
            $(function () {
                new PNotify({
                    title: "Error",
                    type: "danger",
                    text: "Ha ocurrido un error intentando agregar el vehículo",
                    nonblock: {
                        nonblock: true
                    },
                    before_close: function (PNotify) {
                        // You can access the notice's options with this. It is read only.
                        //PNotify.options.text;

                        // You can change the notice's options after the timer like this:
                        PNotify.update({
                            title: PNotify.options.title + " - Enjoy your Stay",
                            before_close: null
                        });
                        PNotify.queueRemove();
                        return false;
                    }
                });
            });
        </script>
    }
}

<!--Mapa-->
<script src="http://maps.google.com/maps/api/js" type="text/javascript"></script>
<style>
    #map_canvas img {
        max-width: none;
    }
</style>

@* FIN MAPA *@
<!--Foto de perfil-->
<div class="col-md-3 col-sm-3 col-xs-12 profile_left">

    <div class="profile_img">

        <!-- image cropping -->
        <div id="crop-avatar">
            <!-- Current avatar -->
            <div class="avatar-view" title="Cambiar Foto">
                <img src="@Model.personas.foto">
            </div>
            <!-- Cropping modal -->
            <div class="modal fade" id="avatar-modal" aria-hidden="true" aria-labelledby="avatar-modal-label" role="dialog" tabindex="-1">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <form class="avatar-form" action="crop.php" enctype="multipart/form-data" method="post">
                            <div class="modal-header">
                                <button class="close" data-dismiss="modal" type="button">&times;</button>
                                <h4 class="modal-title" id="avatar-modal-label">Change Avatar</h4>
                            </div>
                            <div class="modal-body">
                                <div class="avatar-body">

                                    <!-- Upload image and data -->
                                    <div class="avatar-upload">
                                        <input class="avatar-src" name="avatar_src" type="hidden">
                                        <input class="avatar-data" name="avatar_data" type="hidden">
                                        <label for="avatarInput">Local upload</label>
                                        <input class="avatar-input" id="avatarInput" name="avatar_file" type="file">
                                    </div>

                                    <!-- Crop and preview -->
                                    <div class="row">
                                        <div class="col-md-9">
                                            <div class="avatar-wrapper"></div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="avatar-preview preview-lg"></div>
                                            <div class="avatar-preview preview-md"></div>
                                            <div class="avatar-preview preview-sm"></div>
                                        </div>
                                    </div>

                                    <div class="row avatar-btns">
                                        <div class="col-md-9">
                                            <div class="btn-group">
                                                <button class="btn btn-primary" data-method="rotate" data-option="-90" type="button" title="Rotate -90 degrees">Rotate Left</button>
                                                <button class="btn btn-primary" data-method="rotate" data-option="-15" type="button">-15deg</button>
                                                <button class="btn btn-primary" data-method="rotate" data-option="-30" type="button">-30deg</button>
                                                <button class="btn btn-primary" data-method="rotate" data-option="-45" type="button">-45deg</button>
                                            </div>
                                            <div class="btn-group">
                                                <button class="btn btn-primary" data-method="rotate" data-option="90" type="button" title="Rotate 90 degrees">Rotate Right</button>
                                                <button class="btn btn-primary" data-method="rotate" data-option="15" type="button">15deg</button>
                                                <button class="btn btn-primary" data-method="rotate" data-option="30" type="button">30deg</button>
                                                <button class="btn btn-primary" data-method="rotate" data-option="45" type="button">45deg</button>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <button class="btn btn-primary btn-block avatar-save" type="submit">Done</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- <div class="modal-footer">
                              <button class="btn btn-default" data-dismiss="modal" type="button">Close</button>
                            </div> -->
                        </form>
                    </div>
                </div>
            </div>
            <!-- /.modal -->
            <!-- Loading state -->
            <div class="loading" aria-label="Loading" role="img" tabindex="-1"></div>
        </div>
        <!-- end of image cropping -->

    </div>
    <h3>@Model.personas.nombres @Model.personas.apellidos</h3>  <!--nombre completo-->

    <ul class="list-unstyled user_data">
        @*Codigo Taxista*@
        <li>
            <i class="fa fa-user user-profile-icon"></i> @Model.codigoTaxista
        </li>
        @* Provincia *@
        <li>
            <i class="fa fa-map-marker user-profile-icon"></i> @Model.personas.direcciones.municipios.provincias.nombreProvincia
        </li>
        @*Telefono Movil*@
        <li>
            <i class="fa fa-phone user-profile-icon"></i> @Model.personas.contactos.telefonoMovil
        </li>
    </ul>

    @* Boton para editar *@
    @Html.ActionLink("Editar Perfil", "Edit", "Taxistas", new { id = @Model.idTaxista }, new { @class = "btn btn-success fa fa-edit" })
    @* Boton Ubicacion Actual *@
    @*<button type="button" class="btn btn-primary" data-toggle="modal" data-target=".bs-ubicacion-modal-sm"><i class="fa fa-map-marker"></i> Ubicación Actual</button>*@
    <br />
</div>


<!--Datos del taxista-->
<div class="col-md-9 col-sm-9 col-xs-12">


    <div class="row">
        @Html.HiddenFor(model => model.idTaxista)

        <div class="col-md-6">

            <dl class="dl-horizontal">
                @* Cedula *@
                <dt>@Html.DisplayNameFor(model => model.personas.identificacion)</dt>
                <dd>@Html.DisplayFor(model => model.personas.identificacion)</dd>
                @*<dd>@Html.DisplayFor(model => string.Format("{0:n}", model.personas.identificacion))</dd>*@
                @* Fecha Nacimiento *@
                <dt>@Html.DisplayNameFor(model => model.personas.fechaNacimiento)</dt>
                <dd>@Html.DisplayFor(model => model.personas.fechaNacimiento)</dd>
                @* Sexo *@
                <dt>@Html.DisplayNameFor(model => model.personas.sexo)</dt>
                <dd>@Html.DisplayFor(model => model.personas.sexo)</dd>
                @* Nacionalidad *@
                <dt>@Html.DisplayNameFor(model => model.personas.nacionalidad)</dt>
                <dd>@Html.DisplayFor(model => model.personas.nacionalidad)</dd>
                @* Rating *@
                <dt>@Html.DisplayNameFor(model => model.rating)</dt>
                <dd>
                    @for (int i = 1; i <= 5; i++) {
                        if (i <= Model.rating){
                            <a href='#'><span class='fa fa-star'></span></a>
                        }
                        else { 
                            <a href='#'><span class='fa fa-star-o'></span></a>
                        }
                    }
                </dd>
                <dt>Dirección</dt>
                <dd>
                    @Model.personas.direcciones.nombreEdificio @Model.personas.direcciones.numeroPuerta <br />
                    @Model.personas.direcciones.calle @Model.personas.direcciones.numeroEdificio <br />
                    @Model.personas.direcciones.municipios.nombreMunicipio, @Model.personas.direcciones.municipios.provincias.nombreProvincia
                </dd>
            </dl>
        </div>
        @* Mapa *@
        <div class="col-md-6">
            <div id="map_canvas" style="height: 200px;"></div>
        </div>
    </div>

    @* Vehiculos *@
    <hr />
    <h2 class="text-center">Vehículos</h2>

    <div class="row" style="margin-top: 50px">
        <p>
            <button type="button" class="btn btn-success" data-toggle="modal" data-target=".bs-example-modal-lg"><i class="fa fa-car"></i> Agregar Vehículo</button>
        </p>
        <table id="example" class="table table-striped responsive-utilities jambo_table">
            <thead>
                <tr class="headings">
                    <th class="text-center">@Html.DisplayNameFor(model => model.vehiculo.placa)</th>
                    <th class="text-center">@Html.DisplayNameFor(model => model.vehiculo.marca)</th>
                    <th class="text-center">@Html.DisplayNameFor(model => model.vehiculo.modelo)</th>
                    <th class="text-center">@Html.DisplayNameFor(model => model.vehiculo.anio)</th>
                    <th class="text-center">@Html.DisplayNameFor(model => model.vehiculo.color)</th>
                    <th class="text-center">@Html.DisplayNameFor(model => model.vehiculo.estadovehiculos.estadoVehiculo)</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.vehiculos)
                {
                    if (item.idEstadoVehiculo == 31)
                    {
                        <tr>
                            <td class="text-center">@Html.DisplayFor(modelItem => item.placa)</td>
                            <td class="text-center">@Html.DisplayFor(modelItem => item.marca)</td>
                            <td class="text-center">@Html.DisplayFor(modelItem => item.modelo)</td>
                            <td class="text-center">@Html.DisplayFor(modelItem => item.anio)</td>
                            <td class="text-center"><i class="fa fa-circle fa-2x" style="color: @item.color"></i></td>@*@Html.DisplayFor(modelItem => item.color)</td>*@
                            @if (item.idEstadoVehiculo == 31)//estado activo
                            {
                                <td class="text-center"><i class="fa fa-thumbs-up fa-2x success"></i></td>
                            }
                            else
                            {
                                <td class="text-center"><i class="fa fa-thumbs-down fa-2x danger"></i></td>
                            }
                            <td class="text-center">@Html.DisplayFor(modelItem => item.estadovehiculos.estadoVehiculo)</td>                           

                            @* Fin Rating *@
                            <td class="text-center">
                                @Html.ActionLink(" ", "Edit", "Vehiculos", new { id = item.idVehiculo }, new { @class = "fa fa-edit", title = "Editar" }) |
                                @Html.ActionLink(" ", "Details", "Vehiculos", new { id = item.idVehiculo }, new { @class = "fa fa-eye", title = "Ver Detalles" }) |
                                @Html.ActionLink(" ", "Inactivar", "Vehiculos", new { id = item.idVehiculo }, new { @class = "fa fa-times danger", title = "Inactivar" })
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>












@* Modal para vehiculos *@

<div class="row col-lg-12">


    <div class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" id="ModalUbicacion">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                @* Header *@
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title text-center"><i class="fa fa-car"></i>Agregar Vehículo</h4>
                </div>
                @* Body *@
                <div class="modal-body">

                    @*render partial de agregar vehiculo*@
                    @Html.Partial("_AgregarVehiculo", Model)
                </div>
                @* Footer *@
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
</div>
@* FIN MODAL ---------------------------------------------------------------------------------------------------------------------------------- *@

@if (ubicacionDisponible)
{
    <script type="text/javascript">
        var map;
        //var marcadores = [];

        $(document).ready(function () {
            //dijujar mapa
            iniciarMapa();
        });

        function iniciarMapa() {
            google.maps.visualRefresh = true;
            var monumento = { lat: 19.451392, lng: -70.694726 };

            map = new google.maps.Map(document.getElementById('map_canvas'), {
                zoom: 16,
                center: monumento,
                mapTypeId: google.maps.MapTypeId.ROADMAP
            });
            ubicarMarkers(map);
        }

        function ubicarMarkers(map) {

            $.getJSON('/Home/ubicacionTaxista/'+@Model.idTaxista, function (data) {
                $.each(data, function (i, item) {
                    //dibunado marcador
                    var latlng = new google.maps.LatLng(item.latitudActual, item.longitudActual);
                    var marker = new google.maps.Marker({
                        position: latlng,
                        //map: map,
                    });

                    //color del marcador de acuerdo a la disponibilidad
                    if (item.estadoDisponibilidad == "Ocupado") {
                        marker.setIcon('/Content/images/taxiOcupado.png')
                    }
                    if (item.estadoDisponibilidad == "Disponible") {
                        marker.setIcon('/Content/images/taxiDisponible.png')
                    }

                    //evento de click en pin
                    google.maps.event.addListener(marker, 'click', function () {
                        infowindow.open(map, marker);
                    });

                    marker.setMap(map);
                    map.setCenter(latlng);
                })
            })

        }

        function eliminarMarkers() {
            for (var i = 0; i < marcadores.length; i++) {
                marcadores[i].setMap(null);
            }
            marcadores = [];
        }
    </script>
}
else
{
    <script type="text/javascript">
        document.getElementById('map_canvas').innerHTML = "<img src='/Content/images/ubicacion-no-disponible.jpg' style='width:300px;height:200px'>"
    </script>
}
